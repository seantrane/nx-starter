{"version":3,"sources":["webpack:////home/travis/build/seantrane/nx-starter/libs/nxsui/src/index.ts","webpack:////home/travis/build/seantrane/nx-starter/libs/nxsui/src/lib/nxsui.module.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.metadata.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,oGAAmC;;;;;;;;;;;;;;;;;;;;;ACAnC,wGAAyC;AACzC,gHAA+C;AAC/C,gHAAsD;AAEzC,mBAAW,GAAY,EAAE,CAAC;AAIvC;IAAA;IAA0B,CAAC;IAAd,WAAW;QAHvB,eAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qBAAY,EAAE,qBAAY,CAAC;SACtC,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAd,kCAAW;;;;;;;;;;;;ACRxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,4EAA4E,OAAO,klB;;;;;;;;;;;ACAnF,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACA/D,wGAA0C;AAE1C,4FAA6C;AAO7C;IALA;QAME,UAAK,GAAG,0BAAW,CAAC,KAAK,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFY,oCAAY;;;;;;;;;;;;;;;ACRZ,mBAAW,GAAG;IACzB,KAAK,EAAE,0BAA0B;CAClC;AAED,kBAAe,mBAAW,CAAC;;;;;;;;;;;;;;;;;;;;;ACL3B,wJAA0D;AAC1D,wGAAyC;AAEzC,+FAA+C;AAC/C,8FAAoC;AACpC,gHAA+C;AAC/C,2FAA+C;AAoB/C;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlBrB,eAAQ,CAAC;YACR,YAAY,EAAE,CAAC,4BAAY,CAAC;YAC5B,OAAO,EAAE;gBACP,gCAAa;gBACb,aAAQ,CAAC,OAAO,EAAE;gBAClB,qBAAY,CAAC,OAAO,CAClB;oBACE,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,mBAAW,EAAE;oBACxC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,mBAAW,EAAE;iBACzC,EACD;oBACE,iBAAiB,EAAE,SAAS;iBAC7B,CACF;aACF;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,4BAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAZ,8BAAS;;;;;;;;;;;;;;AC1BtB,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;;AAEnD,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;ACdnE,wGAA+C;AAC/C,wLAA2E;AAE3E,0FAA6C;AAC7C,+GAAyD;AAEzD,EAAE,CAAC,CAAC,yBAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qBAAc,EAAE,CAAC;AACnB,CAAC;AAED,iDAAsB,EAAE;KACrB,eAAe,CAAC,sBAAS,CAAC;KAC1B,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["export * from './lib/nxsui.module';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const nxsuiRoutes: Route[] = [];\n@NgModule({\n  imports: [CommonModule, RouterModule]\n})\nexport class NxsuiModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>Welcome to the {{title}} website!</h1>\\n  <img width=\\\"300\\\" src=\\\"https://raw.githubusercontent.com/nrwl/nx/master/nx-logo.png\\\" alt=\\\"Nrwl Nx logo\\\">\\n</div>\\n\\n<h2>This is an Angular CLI app built with Nrwl Nx!</h2>\\n\\nAn open source toolkit for enterprise Angular applications.\\n\\nNx is designed to help you create and build enterprise grade Angular applications. It provides an opinionated approach to application project structure and patterns.\\n\\n<h2>Quick Start & Documentation</h2>\\n\\n<a href=\\\"https://nrwl.io/nx\\\">Watch a 5-minute video on how to get started with Nx.</a>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHBzL254c3dlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\nimport { appMetadata } from './app.metadata';\n\n@Component({\n  selector: 'nxsweb-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = appMetadata.title;\n}\n","\nexport const appMetadata = {\n  title: 'Nx Workspace Starter Kit',\n}\n\nexport default appMetadata;\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NxModule } from '@nrwl/nx';\nimport { RouterModule } from '@angular/router';\nimport { nxsuiRoutes } from '@seantrane/nxsui';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    NxModule.forRoot(),\n    RouterModule.forRoot(\n      [\n        { path: 'nxsui', children: nxsuiRoutes },\n        { path: 'nxsui', children: nxsuiRoutes }\n      ],\n      {\n        initialNavigation: 'enabled'\n      }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}